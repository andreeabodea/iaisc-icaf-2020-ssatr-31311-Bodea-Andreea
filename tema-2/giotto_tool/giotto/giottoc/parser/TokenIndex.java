/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.parser;

import giotto.giottoc.analysis.AnalysisAdapter;
import giotto.giottoc.node.EOF;
import giotto.giottoc.node.TActfreq;
import giotto.giottoc.node.TActuator;
import giotto.giottoc.node.TAddress;
import giotto.giottoc.node.TAssign;
import giotto.giottoc.node.TColon;
import giotto.giottoc.node.TComma;
import giotto.giottoc.node.TConnects;
import giotto.giottoc.node.TDo;
import giotto.giottoc.node.TDot;
import giotto.giottoc.node.TDriver;
import giotto.giottoc.node.TExitfreq;
import giotto.giottoc.node.TFrom;
import giotto.giottoc.node.TGreaterThan;
import giotto.giottoc.node.THost;
import giotto.giottoc.node.TIdent;
import giotto.giottoc.node.TIf;
import giotto.giottoc.node.TIn;
import giotto.giottoc.node.TIs;
import giotto.giottoc.node.TLBrace;
import giotto.giottoc.node.TLBracket;
import giotto.giottoc.node.TLPar;
import giotto.giottoc.node.TLessOrEqual;
import giotto.giottoc.node.TMode;
import giotto.giottoc.node.TModule;
import giotto.giottoc.node.TNetwork;
import giotto.giottoc.node.TNumber;
import giotto.giottoc.node.TOutput;
import giotto.giottoc.node.TPeriod;
import giotto.giottoc.node.TPriorities;
import giotto.giottoc.node.TPriority;
import giotto.giottoc.node.TPush;
import giotto.giottoc.node.TRBrace;
import giotto.giottoc.node.TRBracket;
import giotto.giottoc.node.TRPar;
import giotto.giottoc.node.TSchedule;
import giotto.giottoc.node.TSemicolon;
import giotto.giottoc.node.TSensor;
import giotto.giottoc.node.TSlots;
import giotto.giottoc.node.TStart;
import giotto.giottoc.node.TState;
import giotto.giottoc.node.TTask;
import giotto.giottoc.node.TTaskfreq;
import giotto.giottoc.node.TThen;
import giotto.giottoc.node.TTo;
import giotto.giottoc.node.TType;
import giotto.giottoc.node.TUses;
import giotto.giottoc.node.TWcet;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTModule(TModule node)
    {
        index = 0;
    }

    public void caseTType(TType node)
    {
        index = 1;
    }

    public void caseTIs(TIs node)
    {
        index = 2;
    }

    public void caseTSensor(TSensor node)
    {
        index = 3;
    }

    public void caseTUses(TUses node)
    {
        index = 4;
    }

    public void caseTActuator(TActuator node)
    {
        index = 5;
    }

    public void caseTOutput(TOutput node)
    {
        index = 6;
    }

    public void caseTTask(TTask node)
    {
        index = 7;
    }

    public void caseTSchedule(TSchedule node)
    {
        index = 8;
    }

    public void caseTState(TState node)
    {
        index = 9;
    }

    public void caseTDriver(TDriver node)
    {
        index = 10;
    }

    public void caseTIf(TIf node)
    {
        index = 11;
    }

    public void caseTThen(TThen node)
    {
        index = 12;
    }

    public void caseTStart(TStart node)
    {
        index = 13;
    }

    public void caseTMode(TMode node)
    {
        index = 14;
    }

    public void caseTPeriod(TPeriod node)
    {
        index = 15;
    }

    public void caseTActfreq(TActfreq node)
    {
        index = 16;
    }

    public void caseTDo(TDo node)
    {
        index = 17;
    }

    public void caseTExitfreq(TExitfreq node)
    {
        index = 18;
    }

    public void caseTTaskfreq(TTaskfreq node)
    {
        index = 19;
    }

    public void caseTHost(THost node)
    {
        index = 20;
    }

    public void caseTAddress(TAddress node)
    {
        index = 21;
    }

    public void caseTPriorities(TPriorities node)
    {
        index = 22;
    }

    public void caseTNetwork(TNetwork node)
    {
        index = 23;
    }

    public void caseTConnects(TConnects node)
    {
        index = 24;
    }

    public void caseTSlots(TSlots node)
    {
        index = 25;
    }

    public void caseTPush(TPush node)
    {
        index = 26;
    }

    public void caseTFrom(TFrom node)
    {
        index = 27;
    }

    public void caseTTo(TTo node)
    {
        index = 28;
    }

    public void caseTIn(TIn node)
    {
        index = 29;
    }

    public void caseTPriority(TPriority node)
    {
        index = 30;
    }

    public void caseTWcet(TWcet node)
    {
        index = 31;
    }

    public void caseTIdent(TIdent node)
    {
        index = 32;
    }

    public void caseTNumber(TNumber node)
    {
        index = 33;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 34;
    }

    public void caseTComma(TComma node)
    {
        index = 35;
    }

    public void caseTDot(TDot node)
    {
        index = 36;
    }

    public void caseTColon(TColon node)
    {
        index = 37;
    }

    public void caseTGreaterThan(TGreaterThan node)
    {
        index = 38;
    }

    public void caseTLessOrEqual(TLessOrEqual node)
    {
        index = 39;
    }

    public void caseTAssign(TAssign node)
    {
        index = 40;
    }

    public void caseTLPar(TLPar node)
    {
        index = 41;
    }

    public void caseTRPar(TRPar node)
    {
        index = 42;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 43;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 44;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 45;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 46;
    }

    public void caseEOF(EOF node)
    {
        index = 47;
    }
}
