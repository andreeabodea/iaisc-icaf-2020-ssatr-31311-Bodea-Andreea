/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class ANetworkTimeslotDeclarationTail extends PNetworkTimeslotDeclarationTail
{
    private TSemicolon _semicolon_;
    private PNetworkTimeslotDeclaration _networkTimeslotDeclaration_;

    public ANetworkTimeslotDeclarationTail()
    {
    }

    public ANetworkTimeslotDeclarationTail(
        TSemicolon _semicolon_,
        PNetworkTimeslotDeclaration _networkTimeslotDeclaration_)
    {
        setSemicolon(_semicolon_);

        setNetworkTimeslotDeclaration(_networkTimeslotDeclaration_);

    }
    public Object clone()
    {
        return new ANetworkTimeslotDeclarationTail(
            (TSemicolon) cloneNode(_semicolon_),
            (PNetworkTimeslotDeclaration) cloneNode(_networkTimeslotDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANetworkTimeslotDeclarationTail(this);
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if (_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public PNetworkTimeslotDeclaration getNetworkTimeslotDeclaration()
    {
        return _networkTimeslotDeclaration_;
    }

    public void setNetworkTimeslotDeclaration(PNetworkTimeslotDeclaration node)
    {
        if (_networkTimeslotDeclaration_ != null)
        {
            _networkTimeslotDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _networkTimeslotDeclaration_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_semicolon_)
            + toString(_networkTimeslotDeclaration_);
    }

    void removeChild(Node child)
    {
        if (_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

        if (_networkTimeslotDeclaration_ == child)
        {
            _networkTimeslotDeclaration_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        if (_networkTimeslotDeclaration_ == oldChild)
        {
            setNetworkTimeslotDeclaration((PNetworkTimeslotDeclaration) newChild);
            return;
        }

    }
}
