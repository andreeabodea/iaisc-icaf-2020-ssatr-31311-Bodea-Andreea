/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AModeSwitchAnnotation extends PModeSwitchAnnotation
{
    private TLBracket _lBracket_;
    private THost _host_;
    private PHostNameIdent _hostName_;
    private TSemicolon _semicolon_;
    private PScheduleConnectionList _scheduleConnectionList_;
    private TRBracket _rBracket_;

    public AModeSwitchAnnotation()
    {
    }

    public AModeSwitchAnnotation(
        TLBracket _lBracket_,
        THost _host_,
        PHostNameIdent _hostName_,
        TSemicolon _semicolon_,
        PScheduleConnectionList _scheduleConnectionList_,
        TRBracket _rBracket_)
    {
        setLBracket(_lBracket_);

        setHost(_host_);

        setHostName(_hostName_);

        setSemicolon(_semicolon_);

        setScheduleConnectionList(_scheduleConnectionList_);

        setRBracket(_rBracket_);

    }
    public Object clone()
    {
        return new AModeSwitchAnnotation(
            (TLBracket) cloneNode(_lBracket_),
            (THost) cloneNode(_host_),
            (PHostNameIdent) cloneNode(_hostName_),
            (TSemicolon) cloneNode(_semicolon_),
            (PScheduleConnectionList) cloneNode(_scheduleConnectionList_),
            (TRBracket) cloneNode(_rBracket_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModeSwitchAnnotation(this);
    }

    public TLBracket getLBracket()
    {
        return _lBracket_;
    }

    public void setLBracket(TLBracket node)
    {
        if (_lBracket_ != null)
        {
            _lBracket_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBracket_ = node;
    }

    public THost getHost()
    {
        return _host_;
    }

    public void setHost(THost node)
    {
        if (_host_ != null)
        {
            _host_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _host_ = node;
    }

    public PHostNameIdent getHostName()
    {
        return _hostName_;
    }

    public void setHostName(PHostNameIdent node)
    {
        if (_hostName_ != null)
        {
            _hostName_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _hostName_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if (_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public PScheduleConnectionList getScheduleConnectionList()
    {
        return _scheduleConnectionList_;
    }

    public void setScheduleConnectionList(PScheduleConnectionList node)
    {
        if (_scheduleConnectionList_ != null)
        {
            _scheduleConnectionList_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _scheduleConnectionList_ = node;
    }

    public TRBracket getRBracket()
    {
        return _rBracket_;
    }

    public void setRBracket(TRBracket node)
    {
        if (_rBracket_ != null)
        {
            _rBracket_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBracket_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lBracket_)
            + toString(_host_)
            + toString(_hostName_)
            + toString(_semicolon_)
            + toString(_scheduleConnectionList_)
            + toString(_rBracket_);
    }

    void removeChild(Node child)
    {
        if (_lBracket_ == child)
        {
            _lBracket_ = null;
            return;
        }

        if (_host_ == child)
        {
            _host_ = null;
            return;
        }

        if (_hostName_ == child)
        {
            _hostName_ = null;
            return;
        }

        if (_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

        if (_scheduleConnectionList_ == child)
        {
            _scheduleConnectionList_ = null;
            return;
        }

        if (_rBracket_ == child)
        {
            _rBracket_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_lBracket_ == oldChild)
        {
            setLBracket((TLBracket) newChild);
            return;
        }

        if (_host_ == oldChild)
        {
            setHost((THost) newChild);
            return;
        }

        if (_hostName_ == oldChild)
        {
            setHostName((PHostNameIdent) newChild);
            return;
        }

        if (_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        if (_scheduleConnectionList_ == oldChild)
        {
            setScheduleConnectionList((PScheduleConnectionList) newChild);
            return;
        }

        if (_rBracket_ == oldChild)
        {
            setRBracket((TRBracket) newChild);
            return;
        }

    }
}
