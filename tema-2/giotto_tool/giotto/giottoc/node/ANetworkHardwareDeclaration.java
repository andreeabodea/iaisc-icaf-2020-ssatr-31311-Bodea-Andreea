/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class ANetworkHardwareDeclaration extends PHardwareDeclaration
{
    private PNetworkDeclaration _networkDeclaration_;

    public ANetworkHardwareDeclaration()
    {
    }

    public ANetworkHardwareDeclaration(
        PNetworkDeclaration _networkDeclaration_)
    {
        setNetworkDeclaration(_networkDeclaration_);

    }
    public Object clone()
    {
        return new ANetworkHardwareDeclaration(
            (PNetworkDeclaration) cloneNode(_networkDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANetworkHardwareDeclaration(this);
    }

    public PNetworkDeclaration getNetworkDeclaration()
    {
        return _networkDeclaration_;
    }

    public void setNetworkDeclaration(PNetworkDeclaration node)
    {
        if (_networkDeclaration_ != null)
        {
            _networkDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _networkDeclaration_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_networkDeclaration_);
    }

    void removeChild(Node child)
    {
        if (_networkDeclaration_ == child)
        {
            _networkDeclaration_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_networkDeclaration_ == oldChild)
        {
            setNetworkDeclaration((PNetworkDeclaration) newChild);
            return;
        }

    }
}
