/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

public final class AConcreteTimeslotDeclarationList extends PTimeslotDeclarationList
{
    private PTimeslotDeclaration _timeslotDeclaration_;
    private final LinkedList _timeslotDeclarationTail_ = new TypedLinkedList(new TimeslotDeclarationTail_Cast());

    public AConcreteTimeslotDeclarationList()
    {
    }

    public AConcreteTimeslotDeclarationList(
        PTimeslotDeclaration _timeslotDeclaration_,
        List _timeslotDeclarationTail_)
    {
        setTimeslotDeclaration(_timeslotDeclaration_);

        {
            this._timeslotDeclarationTail_.clear();
            this._timeslotDeclarationTail_.addAll(_timeslotDeclarationTail_);
        }

    }

    public AConcreteTimeslotDeclarationList(
        PTimeslotDeclaration _timeslotDeclaration_,
        XPTimeslotDeclarationTail _timeslotDeclarationTail_)
    {
        setTimeslotDeclaration(_timeslotDeclaration_);

        if (_timeslotDeclarationTail_ != null)
        {
            while (_timeslotDeclarationTail_ instanceof X1PTimeslotDeclarationTail)
            {
                this._timeslotDeclarationTail_.addFirst(((X1PTimeslotDeclarationTail) _timeslotDeclarationTail_).getPTimeslotDeclarationTail());
                _timeslotDeclarationTail_ = ((X1PTimeslotDeclarationTail) _timeslotDeclarationTail_).getXPTimeslotDeclarationTail();
            }
            this._timeslotDeclarationTail_.addFirst(((X2PTimeslotDeclarationTail) _timeslotDeclarationTail_).getPTimeslotDeclarationTail());
        }

    }
    public Object clone()
    {
        return new AConcreteTimeslotDeclarationList(
            (PTimeslotDeclaration) cloneNode(_timeslotDeclaration_),
            cloneList(_timeslotDeclarationTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConcreteTimeslotDeclarationList(this);
    }

    public PTimeslotDeclaration getTimeslotDeclaration()
    {
        return _timeslotDeclaration_;
    }

    public void setTimeslotDeclaration(PTimeslotDeclaration node)
    {
        if (_timeslotDeclaration_ != null)
        {
            _timeslotDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _timeslotDeclaration_ = node;
    }

    public LinkedList getTimeslotDeclarationTail()
    {
        return _timeslotDeclarationTail_;
    }

    public void setTimeslotDeclarationTail(List list)
    {
        _timeslotDeclarationTail_.clear();
        _timeslotDeclarationTail_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_timeslotDeclaration_)
            + toString(_timeslotDeclarationTail_);
    }

    void removeChild(Node child)
    {
        if (_timeslotDeclaration_ == child)
        {
            _timeslotDeclaration_ = null;
            return;
        }

        if (_timeslotDeclarationTail_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_timeslotDeclaration_ == oldChild)
        {
            setTimeslotDeclaration((PTimeslotDeclaration) newChild);
            return;
        }

        for (ListIterator i = _timeslotDeclarationTail_.listIterator(); i.hasNext();)
        {
            if (i.next() == oldChild)
            {
                if (newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class TimeslotDeclarationTail_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PTimeslotDeclarationTail node = (PTimeslotDeclarationTail) o;

            if ((node.parent() != null) &&
                (node.parent() != AConcreteTimeslotDeclarationList.this))
            {
                node.parent().removeChild(node);
            }

            if ((node.parent() == null) ||
                (node.parent() != AConcreteTimeslotDeclarationList.this))
            {
                node.parent(AConcreteTimeslotDeclarationList.this);
            }

            return node;
        }
    }
}
