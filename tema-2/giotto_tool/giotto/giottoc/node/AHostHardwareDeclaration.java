/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AHostHardwareDeclaration extends PHardwareDeclaration
{
    private PHostDeclaration _hostDeclaration_;

    public AHostHardwareDeclaration()
    {
    }

    public AHostHardwareDeclaration(
        PHostDeclaration _hostDeclaration_)
    {
        setHostDeclaration(_hostDeclaration_);

    }
    public Object clone()
    {
        return new AHostHardwareDeclaration(
            (PHostDeclaration) cloneNode(_hostDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHostHardwareDeclaration(this);
    }

    public PHostDeclaration getHostDeclaration()
    {
        return _hostDeclaration_;
    }

    public void setHostDeclaration(PHostDeclaration node)
    {
        if (_hostDeclaration_ != null)
        {
            _hostDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _hostDeclaration_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_hostDeclaration_);
    }

    void removeChild(Node child)
    {
        if (_hostDeclaration_ == child)
        {
            _hostDeclaration_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_hostDeclaration_ == oldChild)
        {
            setHostDeclaration((PHostDeclaration) newChild);
            return;
        }

    }
}
