/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PScheduleConnectionTail extends XPScheduleConnectionTail
{
    private XPScheduleConnectionTail _xPScheduleConnectionTail_;
    private PScheduleConnectionTail _pScheduleConnectionTail_;

    public X1PScheduleConnectionTail()
    {
    }

    public X1PScheduleConnectionTail(
        XPScheduleConnectionTail _xPScheduleConnectionTail_,
        PScheduleConnectionTail _pScheduleConnectionTail_)
    {
        setXPScheduleConnectionTail(_xPScheduleConnectionTail_);
        setPScheduleConnectionTail(_pScheduleConnectionTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPScheduleConnectionTail getXPScheduleConnectionTail()
    {
        return _xPScheduleConnectionTail_;
    }

    public void setXPScheduleConnectionTail(XPScheduleConnectionTail node)
    {
        if (_xPScheduleConnectionTail_ != null)
        {
            _xPScheduleConnectionTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPScheduleConnectionTail_ = node;
    }

    public PScheduleConnectionTail getPScheduleConnectionTail()
    {
        return _pScheduleConnectionTail_;
    }

    public void setPScheduleConnectionTail(PScheduleConnectionTail node)
    {
        if (_pScheduleConnectionTail_ != null)
        {
            _pScheduleConnectionTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pScheduleConnectionTail_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPScheduleConnectionTail_ == child)
        {
            _xPScheduleConnectionTail_ = null;
        }

        if (_pScheduleConnectionTail_ == child)
        {
            _pScheduleConnectionTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPScheduleConnectionTail_) +
            toString(_pScheduleConnectionTail_);
    }
}
