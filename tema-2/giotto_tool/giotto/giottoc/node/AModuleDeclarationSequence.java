/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AModuleDeclarationSequence extends PModuleDeclarationSequence
{
    private TModule _module_;
    private PModuleDeclarationList _moduleDeclarationList_;
    private TSemicolon _semicolon_;

    public AModuleDeclarationSequence()
    {
    }

    public AModuleDeclarationSequence(
        TModule _module_,
        PModuleDeclarationList _moduleDeclarationList_,
        TSemicolon _semicolon_)
    {
        setModule(_module_);

        setModuleDeclarationList(_moduleDeclarationList_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AModuleDeclarationSequence(
            (TModule) cloneNode(_module_),
            (PModuleDeclarationList) cloneNode(_moduleDeclarationList_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModuleDeclarationSequence(this);
    }

    public TModule getModule()
    {
        return _module_;
    }

    public void setModule(TModule node)
    {
        if (_module_ != null)
        {
            _module_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _module_ = node;
    }

    public PModuleDeclarationList getModuleDeclarationList()
    {
        return _moduleDeclarationList_;
    }

    public void setModuleDeclarationList(PModuleDeclarationList node)
    {
        if (_moduleDeclarationList_ != null)
        {
            _moduleDeclarationList_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _moduleDeclarationList_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if (_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_module_)
            + toString(_moduleDeclarationList_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if (_module_ == child)
        {
            _module_ = null;
            return;
        }

        if (_moduleDeclarationList_ == child)
        {
            _moduleDeclarationList_ = null;
            return;
        }

        if (_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_module_ == oldChild)
        {
            setModule((TModule) newChild);
            return;
        }

        if (_moduleDeclarationList_ == oldChild)
        {
            setModuleDeclarationList((PModuleDeclarationList) newChild);
            return;
        }

        if (_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
