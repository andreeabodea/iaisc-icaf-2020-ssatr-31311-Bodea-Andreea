/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AActuatorUpdate extends PActuatorUpdate
{
    private TActfreq _actfreq_;
    private TNumber _actuatorFrequency_;
    private TDo _do_;
    private TIdent _actuatorPortName_;
    private TLPar _lPar_;
    private TIdent _driverName_;
    private TRPar _rPar_;
    private TSemicolon _semicolon_;

    public AActuatorUpdate()
    {
    }

    public AActuatorUpdate(
        TActfreq _actfreq_,
        TNumber _actuatorFrequency_,
        TDo _do_,
        TIdent _actuatorPortName_,
        TLPar _lPar_,
        TIdent _driverName_,
        TRPar _rPar_,
        TSemicolon _semicolon_)
    {
        setActfreq(_actfreq_);

        setActuatorFrequency(_actuatorFrequency_);

        setDo(_do_);

        setActuatorPortName(_actuatorPortName_);

        setLPar(_lPar_);

        setDriverName(_driverName_);

        setRPar(_rPar_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AActuatorUpdate(
            (TActfreq) cloneNode(_actfreq_),
            (TNumber) cloneNode(_actuatorFrequency_),
            (TDo) cloneNode(_do_),
            (TIdent) cloneNode(_actuatorPortName_),
            (TLPar) cloneNode(_lPar_),
            (TIdent) cloneNode(_driverName_),
            (TRPar) cloneNode(_rPar_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAActuatorUpdate(this);
    }

    public TActfreq getActfreq()
    {
        return _actfreq_;
    }

    public void setActfreq(TActfreq node)
    {
        if (_actfreq_ != null)
        {
            _actfreq_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _actfreq_ = node;
    }

    public TNumber getActuatorFrequency()
    {
        return _actuatorFrequency_;
    }

    public void setActuatorFrequency(TNumber node)
    {
        if (_actuatorFrequency_ != null)
        {
            _actuatorFrequency_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _actuatorFrequency_ = node;
    }

    public TDo getDo()
    {
        return _do_;
    }

    public void setDo(TDo node)
    {
        if (_do_ != null)
        {
            _do_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _do_ = node;
    }

    public TIdent getActuatorPortName()
    {
        return _actuatorPortName_;
    }

    public void setActuatorPortName(TIdent node)
    {
        if (_actuatorPortName_ != null)
        {
            _actuatorPortName_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _actuatorPortName_ = node;
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if (_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public TIdent getDriverName()
    {
        return _driverName_;
    }

    public void setDriverName(TIdent node)
    {
        if (_driverName_ != null)
        {
            _driverName_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _driverName_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if (_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if (_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_actfreq_)
            + toString(_actuatorFrequency_)
            + toString(_do_)
            + toString(_actuatorPortName_)
            + toString(_lPar_)
            + toString(_driverName_)
            + toString(_rPar_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if (_actfreq_ == child)
        {
            _actfreq_ = null;
            return;
        }

        if (_actuatorFrequency_ == child)
        {
            _actuatorFrequency_ = null;
            return;
        }

        if (_do_ == child)
        {
            _do_ = null;
            return;
        }

        if (_actuatorPortName_ == child)
        {
            _actuatorPortName_ = null;
            return;
        }

        if (_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if (_driverName_ == child)
        {
            _driverName_ = null;
            return;
        }

        if (_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

        if (_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_actfreq_ == oldChild)
        {
            setActfreq((TActfreq) newChild);
            return;
        }

        if (_actuatorFrequency_ == oldChild)
        {
            setActuatorFrequency((TNumber) newChild);
            return;
        }

        if (_do_ == oldChild)
        {
            setDo((TDo) newChild);
            return;
        }

        if (_actuatorPortName_ == oldChild)
        {
            setActuatorPortName((TIdent) newChild);
            return;
        }

        if (_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if (_driverName_ == oldChild)
        {
            setDriverName((TIdent) newChild);
            return;
        }

        if (_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if (_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
