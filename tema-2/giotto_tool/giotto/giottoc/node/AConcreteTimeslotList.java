/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

public final class AConcreteTimeslotList extends PTimeslotList
{
    private PTimeslot _timeslot_;
    private final LinkedList _timeslotTail_ = new TypedLinkedList(new TimeslotTail_Cast());

    public AConcreteTimeslotList()
    {
    }

    public AConcreteTimeslotList(
        PTimeslot _timeslot_,
        List _timeslotTail_)
    {
        setTimeslot(_timeslot_);

        {
            this._timeslotTail_.clear();
            this._timeslotTail_.addAll(_timeslotTail_);
        }

    }

    public AConcreteTimeslotList(
        PTimeslot _timeslot_,
        XPTimeslotTail _timeslotTail_)
    {
        setTimeslot(_timeslot_);

        if (_timeslotTail_ != null)
        {
            while (_timeslotTail_ instanceof X1PTimeslotTail)
            {
                this._timeslotTail_.addFirst(((X1PTimeslotTail) _timeslotTail_).getPTimeslotTail());
                _timeslotTail_ = ((X1PTimeslotTail) _timeslotTail_).getXPTimeslotTail();
            }
            this._timeslotTail_.addFirst(((X2PTimeslotTail) _timeslotTail_).getPTimeslotTail());
        }

    }
    public Object clone()
    {
        return new AConcreteTimeslotList(
            (PTimeslot) cloneNode(_timeslot_),
            cloneList(_timeslotTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConcreteTimeslotList(this);
    }

    public PTimeslot getTimeslot()
    {
        return _timeslot_;
    }

    public void setTimeslot(PTimeslot node)
    {
        if (_timeslot_ != null)
        {
            _timeslot_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _timeslot_ = node;
    }

    public LinkedList getTimeslotTail()
    {
        return _timeslotTail_;
    }

    public void setTimeslotTail(List list)
    {
        _timeslotTail_.clear();
        _timeslotTail_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_timeslot_)
            + toString(_timeslotTail_);
    }

    void removeChild(Node child)
    {
        if (_timeslot_ == child)
        {
            _timeslot_ = null;
            return;
        }

        if (_timeslotTail_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_timeslot_ == oldChild)
        {
            setTimeslot((PTimeslot) newChild);
            return;
        }

        for (ListIterator i = _timeslotTail_.listIterator(); i.hasNext();)
        {
            if (i.next() == oldChild)
            {
                if (newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class TimeslotTail_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PTimeslotTail node = (PTimeslotTail) o;

            if ((node.parent() != null) &&
                (node.parent() != AConcreteTimeslotList.this))
            {
                node.parent().removeChild(node);
            }

            if ((node.parent() == null) ||
                (node.parent() != AConcreteTimeslotList.this))
            {
                node.parent(AConcreteTimeslotList.this);
            }

            return node;
        }
    }
}
