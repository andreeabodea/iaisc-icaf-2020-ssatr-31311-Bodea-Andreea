/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PTimeslotDeclarationTail extends XPTimeslotDeclarationTail
{
    private XPTimeslotDeclarationTail _xPTimeslotDeclarationTail_;
    private PTimeslotDeclarationTail _pTimeslotDeclarationTail_;

    public X1PTimeslotDeclarationTail()
    {
    }

    public X1PTimeslotDeclarationTail(
        XPTimeslotDeclarationTail _xPTimeslotDeclarationTail_,
        PTimeslotDeclarationTail _pTimeslotDeclarationTail_)
    {
        setXPTimeslotDeclarationTail(_xPTimeslotDeclarationTail_);
        setPTimeslotDeclarationTail(_pTimeslotDeclarationTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPTimeslotDeclarationTail getXPTimeslotDeclarationTail()
    {
        return _xPTimeslotDeclarationTail_;
    }

    public void setXPTimeslotDeclarationTail(XPTimeslotDeclarationTail node)
    {
        if (_xPTimeslotDeclarationTail_ != null)
        {
            _xPTimeslotDeclarationTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPTimeslotDeclarationTail_ = node;
    }

    public PTimeslotDeclarationTail getPTimeslotDeclarationTail()
    {
        return _pTimeslotDeclarationTail_;
    }

    public void setPTimeslotDeclarationTail(PTimeslotDeclarationTail node)
    {
        if (_pTimeslotDeclarationTail_ != null)
        {
            _pTimeslotDeclarationTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pTimeslotDeclarationTail_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPTimeslotDeclarationTail_ == child)
        {
            _xPTimeslotDeclarationTail_ = null;
        }

        if (_pTimeslotDeclarationTail_ == child)
        {
            _pTimeslotDeclarationTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPTimeslotDeclarationTail_) +
            toString(_pTimeslotDeclarationTail_);
    }
}
