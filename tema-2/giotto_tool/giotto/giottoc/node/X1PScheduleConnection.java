/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PScheduleConnection extends XPScheduleConnection
{
    private XPScheduleConnection _xPScheduleConnection_;
    private PScheduleConnection _pScheduleConnection_;

    public X1PScheduleConnection()
    {
    }

    public X1PScheduleConnection(
        XPScheduleConnection _xPScheduleConnection_,
        PScheduleConnection _pScheduleConnection_)
    {
        setXPScheduleConnection(_xPScheduleConnection_);
        setPScheduleConnection(_pScheduleConnection_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPScheduleConnection getXPScheduleConnection()
    {
        return _xPScheduleConnection_;
    }

    public void setXPScheduleConnection(XPScheduleConnection node)
    {
        if (_xPScheduleConnection_ != null)
        {
            _xPScheduleConnection_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPScheduleConnection_ = node;
    }

    public PScheduleConnection getPScheduleConnection()
    {
        return _pScheduleConnection_;
    }

    public void setPScheduleConnection(PScheduleConnection node)
    {
        if (_pScheduleConnection_ != null)
        {
            _pScheduleConnection_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pScheduleConnection_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPScheduleConnection_ == child)
        {
            _xPScheduleConnection_ = null;
        }

        if (_pScheduleConnection_ == child)
        {
            _pScheduleConnection_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPScheduleConnection_) +
            toString(_pScheduleConnection_);
    }
}
