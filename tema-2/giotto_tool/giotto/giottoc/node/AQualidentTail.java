/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AQualidentTail extends PQualidentTail
{
    private TDot _dot_;
    private TIdent _ident_;

    public AQualidentTail()
    {
    }

    public AQualidentTail(
        TDot _dot_,
        TIdent _ident_)
    {
        setDot(_dot_);

        setIdent(_ident_);

    }
    public Object clone()
    {
        return new AQualidentTail(
            (TDot) cloneNode(_dot_),
            (TIdent) cloneNode(_ident_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAQualidentTail(this);
    }

    public TDot getDot()
    {
        return _dot_;
    }

    public void setDot(TDot node)
    {
        if (_dot_ != null)
        {
            _dot_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dot_ = node;
    }

    public TIdent getIdent()
    {
        return _ident_;
    }

    public void setIdent(TIdent node)
    {
        if (_ident_ != null)
        {
            _ident_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _ident_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_dot_)
            + toString(_ident_);
    }

    void removeChild(Node child)
    {
        if (_dot_ == child)
        {
            _dot_ = null;
            return;
        }

        if (_ident_ == child)
        {
            _ident_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_dot_ == oldChild)
        {
            setDot((TDot) newChild);
            return;
        }

        if (_ident_ == oldChild)
        {
            setIdent((TIdent) newChild);
            return;
        }

    }
}
