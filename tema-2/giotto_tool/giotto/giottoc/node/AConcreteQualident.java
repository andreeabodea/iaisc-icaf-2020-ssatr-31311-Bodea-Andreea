/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

public final class AConcreteQualident extends PQualident
{
    private TIdent _ident_;
    private final LinkedList _qualidentTail_ = new TypedLinkedList(new QualidentTail_Cast());

    public AConcreteQualident()
    {
    }

    public AConcreteQualident(
        TIdent _ident_,
        List _qualidentTail_)
    {
        setIdent(_ident_);

        {
            this._qualidentTail_.clear();
            this._qualidentTail_.addAll(_qualidentTail_);
        }

    }

    public AConcreteQualident(
        TIdent _ident_,
        XPQualidentTail _qualidentTail_)
    {
        setIdent(_ident_);

        if (_qualidentTail_ != null)
        {
            while (_qualidentTail_ instanceof X1PQualidentTail)
            {
                this._qualidentTail_.addFirst(((X1PQualidentTail) _qualidentTail_).getPQualidentTail());
                _qualidentTail_ = ((X1PQualidentTail) _qualidentTail_).getXPQualidentTail();
            }
            this._qualidentTail_.addFirst(((X2PQualidentTail) _qualidentTail_).getPQualidentTail());
        }

    }
    public Object clone()
    {
        return new AConcreteQualident(
            (TIdent) cloneNode(_ident_),
            cloneList(_qualidentTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConcreteQualident(this);
    }

    public TIdent getIdent()
    {
        return _ident_;
    }

    public void setIdent(TIdent node)
    {
        if (_ident_ != null)
        {
            _ident_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _ident_ = node;
    }

    public LinkedList getQualidentTail()
    {
        return _qualidentTail_;
    }

    public void setQualidentTail(List list)
    {
        _qualidentTail_.clear();
        _qualidentTail_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_ident_)
            + toString(_qualidentTail_);
    }

    void removeChild(Node child)
    {
        if (_ident_ == child)
        {
            _ident_ = null;
            return;
        }

        if (_qualidentTail_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_ident_ == oldChild)
        {
            setIdent((TIdent) newChild);
            return;
        }

        for (ListIterator i = _qualidentTail_.listIterator(); i.hasNext();)
        {
            if (i.next() == oldChild)
            {
                if (newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class QualidentTail_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PQualidentTail node = (PQualidentTail) o;

            if ((node.parent() != null) &&
                (node.parent() != AConcreteQualident.this))
            {
                node.parent().removeChild(node);
            }

            if ((node.parent() == null) ||
                (node.parent() != AConcreteQualident.this))
            {
                node.parent(AConcreteQualident.this);
            }

            return node;
        }
    }
}
