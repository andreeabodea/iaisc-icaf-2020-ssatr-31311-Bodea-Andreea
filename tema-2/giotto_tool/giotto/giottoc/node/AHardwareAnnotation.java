/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AHardwareAnnotation extends PHardwareAnnotation
{
    private TLBracket _lBracket_;
    private PHardwareDeclarationList _hardwareDeclarationList_;
    private TRBracket _rBracket_;

    public AHardwareAnnotation()
    {
    }

    public AHardwareAnnotation(
        TLBracket _lBracket_,
        PHardwareDeclarationList _hardwareDeclarationList_,
        TRBracket _rBracket_)
    {
        setLBracket(_lBracket_);

        setHardwareDeclarationList(_hardwareDeclarationList_);

        setRBracket(_rBracket_);

    }
    public Object clone()
    {
        return new AHardwareAnnotation(
            (TLBracket) cloneNode(_lBracket_),
            (PHardwareDeclarationList) cloneNode(_hardwareDeclarationList_),
            (TRBracket) cloneNode(_rBracket_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHardwareAnnotation(this);
    }

    public TLBracket getLBracket()
    {
        return _lBracket_;
    }

    public void setLBracket(TLBracket node)
    {
        if (_lBracket_ != null)
        {
            _lBracket_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBracket_ = node;
    }

    public PHardwareDeclarationList getHardwareDeclarationList()
    {
        return _hardwareDeclarationList_;
    }

    public void setHardwareDeclarationList(PHardwareDeclarationList node)
    {
        if (_hardwareDeclarationList_ != null)
        {
            _hardwareDeclarationList_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _hardwareDeclarationList_ = node;
    }

    public TRBracket getRBracket()
    {
        return _rBracket_;
    }

    public void setRBracket(TRBracket node)
    {
        if (_rBracket_ != null)
        {
            _rBracket_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBracket_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lBracket_)
            + toString(_hardwareDeclarationList_)
            + toString(_rBracket_);
    }

    void removeChild(Node child)
    {
        if (_lBracket_ == child)
        {
            _lBracket_ = null;
            return;
        }

        if (_hardwareDeclarationList_ == child)
        {
            _hardwareDeclarationList_ = null;
            return;
        }

        if (_rBracket_ == child)
        {
            _rBracket_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_lBracket_ == oldChild)
        {
            setLBracket((TLBracket) newChild);
            return;
        }

        if (_hardwareDeclarationList_ == oldChild)
        {
            setHardwareDeclarationList((PHardwareDeclarationList) newChild);
            return;
        }

        if (_rBracket_ == oldChild)
        {
            setRBracket((TRBracket) newChild);
            return;
        }

    }
}
