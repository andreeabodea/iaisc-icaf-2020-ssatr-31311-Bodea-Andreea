/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AActualPortTail extends PActualPortTail
{
    private TComma _comma_;
    private PActualPort _actualPort_;

    public AActualPortTail()
    {
    }

    public AActualPortTail(
        TComma _comma_,
        PActualPort _actualPort_)
    {
        setComma(_comma_);

        setActualPort(_actualPort_);

    }
    public Object clone()
    {
        return new AActualPortTail(
            (TComma) cloneNode(_comma_),
            (PActualPort) cloneNode(_actualPort_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAActualPortTail(this);
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if (_comma_ != null)
        {
            _comma_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PActualPort getActualPort()
    {
        return _actualPort_;
    }

    public void setActualPort(PActualPort node)
    {
        if (_actualPort_ != null)
        {
            _actualPort_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _actualPort_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comma_)
            + toString(_actualPort_);
    }

    void removeChild(Node child)
    {
        if (_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if (_actualPort_ == child)
        {
            _actualPort_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if (_actualPort_ == oldChild)
        {
            setActualPort((PActualPort) newChild);
            return;
        }

    }
}
