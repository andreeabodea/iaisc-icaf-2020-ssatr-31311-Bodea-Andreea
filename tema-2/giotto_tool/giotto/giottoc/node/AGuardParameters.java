/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;

import giotto.giottoc.analysis.Analysis;

public final class AGuardParameters extends PGuardParameters
{
    private PActualScopedParameters _actualScopedParameters_;

    public AGuardParameters()
    {
    }

    public AGuardParameters(
        PActualScopedParameters _actualScopedParameters_)
    {
        setActualScopedParameters(_actualScopedParameters_);

    }
    public Object clone()
    {
        return new AGuardParameters(
            (PActualScopedParameters) cloneNode(_actualScopedParameters_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGuardParameters(this);
    }

    public PActualScopedParameters getActualScopedParameters()
    {
        return _actualScopedParameters_;
    }

    public void setActualScopedParameters(PActualScopedParameters node)
    {
        if (_actualScopedParameters_ != null)
        {
            _actualScopedParameters_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _actualScopedParameters_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_actualScopedParameters_);
    }

    void removeChild(Node child)
    {
        if (_actualScopedParameters_ == child)
        {
            _actualScopedParameters_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if (_actualScopedParameters_ == oldChild)
        {
            setActualScopedParameters((PActualScopedParameters) newChild);
            return;
        }

    }
}
