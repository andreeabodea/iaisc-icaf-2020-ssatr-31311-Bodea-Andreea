/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PTypeDeclaration extends XPTypeDeclaration
{
    private XPTypeDeclaration _xPTypeDeclaration_;
    private PTypeDeclaration _pTypeDeclaration_;

    public X1PTypeDeclaration()
    {
    }

    public X1PTypeDeclaration(
        XPTypeDeclaration _xPTypeDeclaration_,
        PTypeDeclaration _pTypeDeclaration_)
    {
        setXPTypeDeclaration(_xPTypeDeclaration_);
        setPTypeDeclaration(_pTypeDeclaration_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPTypeDeclaration getXPTypeDeclaration()
    {
        return _xPTypeDeclaration_;
    }

    public void setXPTypeDeclaration(XPTypeDeclaration node)
    {
        if (_xPTypeDeclaration_ != null)
        {
            _xPTypeDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPTypeDeclaration_ = node;
    }

    public PTypeDeclaration getPTypeDeclaration()
    {
        return _pTypeDeclaration_;
    }

    public void setPTypeDeclaration(PTypeDeclaration node)
    {
        if (_pTypeDeclaration_ != null)
        {
            _pTypeDeclaration_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pTypeDeclaration_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPTypeDeclaration_ == child)
        {
            _xPTypeDeclaration_ = null;
        }

        if (_pTypeDeclaration_ == child)
        {
            _pTypeDeclaration_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPTypeDeclaration_) +
            toString(_pTypeDeclaration_);
    }
}
