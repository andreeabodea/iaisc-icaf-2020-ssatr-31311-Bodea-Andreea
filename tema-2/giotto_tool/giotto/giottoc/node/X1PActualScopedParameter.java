/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PActualScopedParameter extends XPActualScopedParameter
{
    private XPActualScopedParameter _xPActualScopedParameter_;
    private PActualScopedParameter _pActualScopedParameter_;

    public X1PActualScopedParameter()
    {
    }

    public X1PActualScopedParameter(
        XPActualScopedParameter _xPActualScopedParameter_,
        PActualScopedParameter _pActualScopedParameter_)
    {
        setXPActualScopedParameter(_xPActualScopedParameter_);
        setPActualScopedParameter(_pActualScopedParameter_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPActualScopedParameter getXPActualScopedParameter()
    {
        return _xPActualScopedParameter_;
    }

    public void setXPActualScopedParameter(XPActualScopedParameter node)
    {
        if (_xPActualScopedParameter_ != null)
        {
            _xPActualScopedParameter_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPActualScopedParameter_ = node;
    }

    public PActualScopedParameter getPActualScopedParameter()
    {
        return _pActualScopedParameter_;
    }

    public void setPActualScopedParameter(PActualScopedParameter node)
    {
        if (_pActualScopedParameter_ != null)
        {
            _pActualScopedParameter_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pActualScopedParameter_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPActualScopedParameter_ == child)
        {
            _xPActualScopedParameter_ = null;
        }

        if (_pActualScopedParameter_ == child)
        {
            _pActualScopedParameter_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPActualScopedParameter_) +
            toString(_pActualScopedParameter_);
    }
}
