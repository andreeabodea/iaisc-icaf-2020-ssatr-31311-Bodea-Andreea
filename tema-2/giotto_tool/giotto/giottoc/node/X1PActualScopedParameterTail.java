/* This file was generated by SableCC (http://www.sablecc.org/). */

package giotto.giottoc.node;


public final class X1PActualScopedParameterTail extends XPActualScopedParameterTail
{
    private XPActualScopedParameterTail _xPActualScopedParameterTail_;
    private PActualScopedParameterTail _pActualScopedParameterTail_;

    public X1PActualScopedParameterTail()
    {
    }

    public X1PActualScopedParameterTail(
        XPActualScopedParameterTail _xPActualScopedParameterTail_,
        PActualScopedParameterTail _pActualScopedParameterTail_)
    {
        setXPActualScopedParameterTail(_xPActualScopedParameterTail_);
        setPActualScopedParameterTail(_pActualScopedParameterTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPActualScopedParameterTail getXPActualScopedParameterTail()
    {
        return _xPActualScopedParameterTail_;
    }

    public void setXPActualScopedParameterTail(XPActualScopedParameterTail node)
    {
        if (_xPActualScopedParameterTail_ != null)
        {
            _xPActualScopedParameterTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPActualScopedParameterTail_ = node;
    }

    public PActualScopedParameterTail getPActualScopedParameterTail()
    {
        return _pActualScopedParameterTail_;
    }

    public void setPActualScopedParameterTail(PActualScopedParameterTail node)
    {
        if (_pActualScopedParameterTail_ != null)
        {
            _pActualScopedParameterTail_.parent(null);
        }

        if (node != null)
        {
            if (node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pActualScopedParameterTail_ = node;
    }

    void removeChild(Node child)
    {
        if (_xPActualScopedParameterTail_ == child)
        {
            _xPActualScopedParameterTail_ = null;
        }

        if (_pActualScopedParameterTail_ == child)
        {
            _pActualScopedParameterTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPActualScopedParameterTail_) +
            toString(_pActualScopedParameterTail_);
    }
}
