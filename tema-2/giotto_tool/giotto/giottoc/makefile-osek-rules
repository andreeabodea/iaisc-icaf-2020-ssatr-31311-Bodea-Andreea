##---------------------------------------------------------------------
##                                                                     
##           Copyright 2000, Wind River Systems, Inc.           
##                      ALL RIGHTS RESERVED                            
##                                                                     
##   Permission is hereby granted to licensees of Wind River Systems,  
##   Inc. products to use or abstract this computer program for the    
##   sole purpose of implementing a product based on Wind River        
##   Systems, Inc. products.   No other rights to reproduce, use,      
##   or disseminate this computer program, whether in part or in       
##   whole, are granted.                                               
##                                                                     
##   Wind River Systems, Inc. makes no representation or warranties    
##   with respect to the performance of this computer program, and     
##   specifically disclaims any responsibility for any damages,        
##   special or consequential, connected with the use of this program. 
##
######################################################################
# OSEK specific stuff for MPC 555 processor using DIAB compiler
#
# Build rules.
#
rebuild: cleanQuiet emachine

relink: cleanExe emachine

oil: cleanOil emachine

osek-clean:
	@$(BLANK)
	@echo ==== Removing build directory ====
	@$(BLANK)
	@if exist $(BLD)$(DIRCHAR)$(NUL)    echo $(RMDIR) $(BLD)
	@if exist $(BLD)$(DIRCHAR)$(NUL)         $(RMDIR) $(BLD)

cleanQuiet:
	@if exist $(BLD)$(DIRCHAR)$(NUL)    $(RMDIR) $(BLD)

cleanExe:
	@if exist $(BLD)$(DIRCHAR)ram.elf   $(RM) $(BLD)$(DIRCHAR)ram.elf
	@if exist $(BLD)$(DIRCHAR)ram.srec  $(RM) $(BLD)$(DIRCHAR)ram.srec

cleanOil:
	@if exist $(BLD)$(DIRCHAR)oil.c     $(RM) $(BLD)$(DIRCHAR)oil.c

#
# Remake the executable image, which depends on this file, the 3 files 
# generated by the OIL reader and all application specific object files.
# Once all OIL files and object files are up to date, the make process
# generates the linker command file, ram.dld.  It is the concatenation of:
#   a) "bsp.lk" in the BSP directory.
#   b) The list of application object files defined by OBJ_FILES.
#   c) The oilreader generated file "oil.lk" which defines which kernel
#      libraries are to be used.
# Finally, ddump is invoked to convert the "elf" file generated by
# the linker into an S-Record file.
#
BUILD_ALL: show_config dirs $(OIL_OUT_FILES)
	@$(MAKE) -f $(SRC)$(DIRCHAR)makefile --no-print-directory BUILD_EXE

BUILD_EXE: $(BLD)/ram.dld $(BLD)/ram.elf $(BLD)/ram.srec

$(BLD)/ram.dld: $(OBJ_FILES) $(SRC)/makefile
	@$(CAT) $(OSEK_BSP)$(DIRCHAR)bsp.lk >$(BLD)$(DIRCHAR)ram.dld
	@echo $(OBJ_FILES) >>$(BLD)$(DIRCHAR)ram.dld
	@$(CAT) $(BLD)$(DIRCHAR)oil.lk >>$(BLD)$(DIRCHAR)ram.dld
	@echo $(OSEK_BSP)$(DIRCHAR)obj$(DIRCHAR)begin.o >>$(BLD)$(DIRCHAR)ram.dld
	@echo $(OSEK_BSP)$(DIRCHAR)obj$(DIRCHAR)clockint.o >>$(BLD)$(DIRCHAR)ram.dld
	@echo $(OSEK_BSP)$(DIRCHAR)obj$(DIRCHAR)extint.o >>$(BLD)$(DIRCHAR)ram.dld
	@echo $(OSEK_BSP)$(DIRCHAR)libbsp.a >>$(BLD)$(DIRCHAR)ram.dld

$(BLD)/ram.elf: $(BLD)/ram.dld
	@$(BLANK)
	@echo ==== Linking ====
	@$(BLANK)
	$(LD) $(LFLAGS) >$(BLD)$(DIRCHAR)ram.map -Wm $(BLD)$(DIRCHAR)ram.dld -o $(BLD)$(DIRCHAR)ram.elf

$(BLD)/ram.srec: $(BLD)/ram.elf
	$(DUMP) -Rv $(BLD)$(DIRCHAR)ram.elf -o $(BLD)$(DIRCHAR)ram.srec

#
# Create derived object output directories if they don't already exist.
#
dirs:
	@$(MKDIR) -verbose $(BLD) $(BLD)$(DIRCHAR)examples $(OBJDIRS)

#
# Remake OIL reader output files as needed.
#
$(O_FILE): $(OIL_FILE) $(INC_OIL_FILES) $(SRC)/makefile
	@$(BLANK)
	@echo ==== Processing oil files ====
	@$(BLANK)
	$(CONFIGURATOR) -t $(CPU) -b $(BOARD) -o $(BLD) $(OIL_FILE)
	@$(BLANK)
	@echo ==== Compiling ====

$(O_OBJECTS): $(BLD)/%.o: $(BLD)/%.c $(OIL_INCS) $(SYS_INCS) $(SRC)/makefile
	@$(BLANK)
	@echo -- $*.c --
	$(CC) $(CFLAGS) -w -o $(BLD)$(DIRCHAR)$*.o $(BLD)$(DIRCHAR)$*.c > $(BLD)$(DIRCHAR)$*.lst

#
# Remake application specific C source files as needed.
#
$(C_OBJECTS): $(BLD)/%.o: $(SRC)/%.c $(APP_INCS) $(SYS_INCS) $(OIL_INCS) $(SRC)/makefile
	@$(BLANK)
	@echo -- $*.c --
	$(CC) $(CFLAGS) -o $(BLD)$(DIRCHAR)$*.o $(SRC)$(DIRCHAR)$*.c > $(BLD)$(DIRCHAR)$*.lst

#
# Remake application specific assembly language source files as needed.
#
$(S_OBJECTS): $(BLD)/%.o: $(SRC)/%.s $(SRC)/makefile
	@$(BLANK)
	@echo -- $*.s --
	$(CC) -E $(SRC)$(DIRCHAR)$*.s > $(BLD)$(DIRCHAR)$*.ppc
	$(AS) $(AFLAGS) -o $(BLD)$(DIRCHAR)$*.o $(BLD)$(DIRCHAR)$*.ppc > $(BLD)$(DIRCHAR)$*.lst
	@$(RM) $(BLD)$(DIRCHAR)$*.ppc

#
# Echo the standard configuration variables.
#
show_config :
ifeq ($(SHOW_CONFIG),YES)
	@echo +-----------------------------------------------------+
	@echo + OIL_FILE: $(OIL_FILE)
	@echo + CPU: $(CPU)
	@echo + BOARD: $(BOARD)
	@echo + TOOL: $(TOOL)
	@echo + SRC_DIR: $(SRC)
	@echo + BLD_DIR: $(BLD)
	@echo + WIND_BASE: $(WIND_BASE)
	@echo + WIND_HOST_TYPE: $(WIND_HOST_TYPE)
	@echo + WIND_KERNEL: $(WIND_KERNEL)
	@echo +-----------------------------------------------------+
endif
